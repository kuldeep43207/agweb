<?php

use \Drupal\node\Entity\Node;
use \Drupal\block\Entity\Block;

/**
 * @file
 * Functions to support theming in the agweb theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function agweb_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function agweb_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function agweb_preprocess_page__node__article(array &$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  $node = $variables['node'];
  $primary_category = $node->get('field_keyword')->getValue()[0]['target_id'];
  if(isset($primary_category)) {
    $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($primary_category);
    reset($parent);
    $first_key = key($parent);
    if(isset($parent[$first_key])) {
      $parent_name = $parent[$first_key]->getName();
      switch ($parent_name) {
        case 'BEEF':
          $parent_name = 'LIVESTOCK';
          break;
        case 'CROP PRODUCTION':
          $parent_name = 'CROPS';
          break;
        case 'DAIRY':
          $parent_name = 'LIVESTOCK';
          break;
        case 'FARM BUSINESS':
          $parent_name = 'BUSINESS';
          break;
        case 'HOGS':
          $parent_name = 'LIVESTOCK';
          break;
      }
    }
  }
  else {
    $parent_name = 'NEWS';
  }
  $parent_name_link_map = ['WEATHER' => 'weather','BUSINESS' => 'farm-business/agribusiness', 'CROPS' => 'crops', 'MARKETS' => 'markets', 'TECHNOLOGY' => 'technology', 'POLICY' => 'policy', 'ARTICLE' => 'news'];
  $parent_link = $parent_name_link_map[$parent_name];
  $variables['category'] = $parent_name;
  $variables['category_link'] = $parent_link;
}

/**
 * Blog Category
 */
 function agweb_preprocess_page__node__blog(array &$variables) {
   $node = \Drupal::routeMatch()->getParameter('node');
   $node = $variables['node'];
   $primary_category = $node->get('field_keyword')->getValue()[0]['target_id'];
   if(isset($primary_category)) {
    $parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($primary_category);
    reset($parent);
    $first_key = key($parent);
    if(isset($parent[$first_key])) {
      $parent_name = $parent[$first_key]->getName();
      switch ($parent_name) {
        case 'BEEF':
          $parent_name = 'LIVESTOCK';
          break;
        case 'CROP PRODUCTION':
          $parent_name = 'CROPS';
          break;
        case 'DAIRY':
          $parent_name = 'LIVESTOCK';
          break;
        case 'FARM BUSINESS':
          $parent_name = 'BUSINESS';
          break;
        case 'HOGS':
          $parent_name = 'LIVESTOCK';
          break;
      }
    }
  }
  else {
    $parent_name = 'BLOG';
  }
   $parent_name_link_map = ['WEATHER' => 'weather','BUSINESS' => 'farm-business/agribusiness', 'CROPS' => 'crops', 'MARKETS' => 'markets', 'TECHNOLOGY' => 'technology', 'POLICY' => 'policy', 'BLOG' => 'blog'];
   $parent_link = $parent_name_link_map[$parent_name];
   $variables['category'] = $parent_name;
   $variables['category_link'] = $parent_link;
}
/**
 * Implements hook_theme_suggestions_page_alter().
 */
function agweb_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function agweb_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function agweb_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function agweb_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function agweb_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function agweb_preprocess_node__article(array &$variables) {
  // Default to turning off byline/submitted.
  $node = $variables['node'];
  $variables['node_teaser'] = $node->get('body')->getValue()[0]['summary'];
  $block = Block::load('socialsharingblock');
  $block_content = \Drupal::entityTypeManager()->getViewBuilder('block')->view($block);
  $variables['social_share'] = $block_content;
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function agweb_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function agweb_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function agweb_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function agweb_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function agweb_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function agweb_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function agweb_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

/**
 * Load ads block in Views.
 */
function agweb_preprocess_views_view_unformatted(&$variables) {
  $block = \Drupal\block\Entity\Block::load('adcategorypage');
  $variables['adcategorypage'] = \Drupal::entityTypeManager()
  ->getViewBuilder('block')
  ->view($block);
}

/**
* Load Date and Social Share Block
*/
function agweb_preprocess_node__events(array &$variables) {
  // Load Date
  $node = $variables['node'];
  $start_date = $node->get('field_event_date')->getValue()[0]['value'];
  $end_date = $node->get('field_event_date')->getValue()[0]['end_value'];
  $start_date = date("F d, Y", strtotime($start_date));
  $end_date = date("F d, Y", strtotime($end_date));
  $event_month = date("F Y", strtotime($start_date));
  $variables['event_end_date'] = $end_date;
  $variables['event_start_date'] = $start_date;
  $variables['event_month'] = $event_month;
  // Load Social Share Block
  $block = Block::load('socialsharingblock');
  $block_content = \Drupal::entityTypeManager()->getViewBuilder('block')->view($block);
  $variables['social_share'] = $block_content;
}

/**
* Load Social Share Block
*/
function agweb_preprocess_node__blog(array &$variables) {
  $block = Block::load('socialsharingblock');
  $block_content = \Drupal::entityTypeManager()->getViewBuilder('block')->view($block);
  $variables['social_share'] = $block_content;
}

function agweb_preprocess_node___100_ideas(array &$variables) {
  $block = Block::load('socialsharingblock');
  $block_content = \Drupal::entityTypeManager()->getViewBuilder('block')->view($block);
  $variables['social_share'] = $block_content;
}

/**
* Load Social Share Block
*/
function agweb_preprocess_views_view_fields__agweb_author(&$variables) {
  $user = \Drupal::routeMatch()->getParameter('user');
  $user_email = $user->getEmail();
  $variables['user_email'] = $user_email;
}
